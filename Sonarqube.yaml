---
 - name: Install and configure Sonarqube
   hosts: node
   become: yes
   vars_files:
         - vara.yml
   tasks:
     - name: Update  apt packages
       apt:
         update_cache: yes
         upgrade: yes

     - name: Add postgress repo
       become: true
       shell: 'sh -c echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'


     - name: Install postgres
       package: name={{item}} state=present
       with_items:
           - postgresql
           - postgresql-contrib
           - python3-psycopg2

     - name: "Start and enable services"
       service:
            name: postgresql
            state: started
            enabled: true

     - name: Copy the postgres db setup script
       copy:
         src: "dbsetup.sh"
         dest: "/tmp/dbsetup.sh"
         mode: 0777
         owner: "postgres"

     - name: Create the postgres user and db for SonarQube
       command: "/tmp/dbsetup.sh {{ sonar_db_pass }}"
       become: yes
       become_user: postgres

    - name: Create the sonar user for running the SonarQube services
       user:
         name: sonar
         comment: System user for running SonarQube

     - name: Download SonarQube
       get_url:
           url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonar_version }}.zip"
           dest: "/srv/sonarqube-{{ sonar_version }}.zip"

     - name: Extract SonarQube
       unarchive:
            src: "/srv/sonarqube-{{ sonar_version }}.zip"
            dest: "/srv"
            copy: no
            owner: sonar


     - name: Link this version of sonarqube as the server SonarQube version
       file:
         src: "/srv/sonarqube-{{ sonar_version }}"
         dest: "/srv/sonarqube"
         state: link
         owner: sonar

     - name: Configure sonarqube username
       lineinfile:
           path: "/srv/sonarqube/conf/sonar.properties"
           regexp: "^sonar.jdbc.username="
           insertafter: "^#sonar.jdbc.username="
           line: "sonar.jdbc.username={{ sonar_db_user }}"


      - name: Config  sonarqube DB password
       lineinfile:
             path: "/srv/sonarqube/conf/sonar.properties"
             regexp: "^sonar.jdbc.password="
             insertafter: "#sonar.jdbc.password="
             line: "sonar.jdbc.password={{ sonar_db_pass}}"

     - name: Configure Sonarqube Db string
       lineinfile:
          path: "/srv/sonarqube/conf/sonar.properties"
          regexp: "sonar.jdbc.url=jdbc:postgresql://localhost/sonar"
          insertafter: "^sonar.jdbc.url=jdbc:postgresql://localhost/sonar"
          line: "sonar.jdbc.url=jdbc:postgresql://localhost/sonar"


     - name: Configure SonarQube to run as the sonar user
       lineinfile:
          path: "/srv/sonarqube/bin/linux-x86-64/sonar.sh"
          regexp: "RUN_AS_USER=sonar"
          insertafter: "#RUN_AS_USER="
          line: "RUN_AS_USER=sonar"


     - name: Copy the SonarQube service configuration file
       copy:
         src: "/root/ansible/sonarqube.service"
         dest: "/etc/systemd/system/sonarqube.service"

     - name: Configure OS security limits for the sonar user
       copy:
         src: "/root/ansible/sonarqube.limits"
         dest: "/etc/security/limits.d/99-sonarqube.conf"

     - name: Configure kernel level limits for ElasticSearch
       copy:
         src: "/root/ansible/sonarqube.sysctl"
         dest: "/etc/sysctl.d/99-sonarqube.conf"

     - name: Enable the SonarQube service
       systemd:
          state: started
          enabled: yes
          daemon_reload: yes
          name: sonarqube